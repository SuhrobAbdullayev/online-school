CREATE TABLE permission
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_permission PRIMARY KEY (id)
);

CREATE TABLE role
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_by VARCHAR(255),
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    role_name  VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_role PRIMARY KEY (id)
);

CREATE TABLE role_permission
(
    permission_id BIGINT NOT NULL,
    role_id       BIGINT NOT NULL,
    CONSTRAINT pk_role_permission PRIMARY KEY (permission_id, role_id)
);

CREATE TABLE user_role
(
    role_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT pk_user_role PRIMARY KEY (role_id, user_id)
);

CREATE TABLE users
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    first_name    VARCHAR(255),
    last_name     VARCHAR(255),
    username      VARCHAR(255)                            NOT NULL,
    password      VARCHAR(50)                             NOT NULL,
    is_active     BOOLEAN DEFAULT TRUE                    NOT NULL,
    is_deleted    BOOLEAN DEFAULT FALSE                   NOT NULL,
    refresh_token VARCHAR(1000),
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE role
    ADD CONSTRAINT uc_role_role_name UNIQUE (role_name);

ALTER TABLE users
    ADD CONSTRAINT uc_users_refresh_token UNIQUE (refresh_token);

ALTER TABLE users
    ADD CONSTRAINT uc_users_username UNIQUE (username);

ALTER TABLE role_permission
    ADD CONSTRAINT fk_rolper_on_permission FOREIGN KEY (permission_id) REFERENCES permission (id);

ALTER TABLE role_permission
    ADD CONSTRAINT fk_rolper_on_role FOREIGN KEY (role_id) REFERENCES role (id);

ALTER TABLE user_role
    ADD CONSTRAINT fk_user_role_on_role FOREIGN KEY (role_id) REFERENCES role (id);

ALTER TABLE user_role
    ADD CONSTRAINT fk_user_role_on_user FOREIGN KEY (user_id) REFERENCES users (id);